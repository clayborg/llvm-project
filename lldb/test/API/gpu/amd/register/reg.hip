#include <hip/hip_runtime.h>
#include <iostream>

/// \brief Checks if the provided error code is \p hipSuccess and if not,
/// prints an error message to the standard error output and terminates the
/// program with an error code.
constexpr int error_exit_code = -1;
#define HIP_CHECK(condition)                                              \
  {                                                                       \
    const hipError_t error = condition;                                   \
    if (error != hipSuccess) {                                            \
      std::cerr << "An error encountered: \"" << hipGetErrorString(error) \
                << "\" at " << __FILE__ << ':' << __LINE__ << std::endl;  \
      std::exit(error_exit_code);                                         \
    }                                                                     \
  }

// Set the registers to known values so we can test reading and writing.
// You can regenerate the asm with `gen.py` in this directory if needed.
__global__ void set_known_vgpr_values_kernel() {
asm volatile(
  "v_mov_b32   v0, 0x00000000\n"
  "v_mov_b32   v1, 0x01010101\n"
  "v_mov_b32   v2, 0x02020202\n"
  "v_mov_b32   v3, 0x03030303\n"
  "v_mov_b32   v4, 0x04040404\n"
  "v_mov_b32   v5, 0x05050505\n"
  "v_mov_b32   v6, 0x06060606\n"
  "v_mov_b32   v7, 0x07070707\n"
  "v_mov_b32   v8, 0x08080808\n"
  "v_mov_b32   v9, 0x09090909\n"
  "v_mov_b32  v10, 0x0A0A0A0A\n"
  "v_mov_b32  v11, 0x0B0B0B0B\n"
  "v_mov_b32  v12, 0x0C0C0C0C\n"
  "v_mov_b32  v13, 0x0D0D0D0D\n"
  "v_mov_b32  v14, 0x0E0E0E0E\n"
  "v_mov_b32  v15, 0x0F0F0F0F\n"
  "v_mov_b32  v16, 0x10101010\n"
  "v_mov_b32  v17, 0x11111111\n"
  "v_mov_b32  v18, 0x12121212\n"
  "v_mov_b32  v19, 0x13131313\n"
  "v_mov_b32  v20, 0x14141414\n"
  "v_mov_b32  v21, 0x15151515\n"
  "v_mov_b32  v22, 0x16161616\n"
  "v_mov_b32  v23, 0x17171717\n"
  "v_mov_b32  v24, 0x18181818\n"
  "v_mov_b32  v25, 0x19191919\n"
  "v_mov_b32  v26, 0x1A1A1A1A\n"
  "v_mov_b32  v27, 0x1B1B1B1B\n"
  "v_mov_b32  v28, 0x1C1C1C1C\n"
  "v_mov_b32  v29, 0x1D1D1D1D\n"
  "v_mov_b32  v30, 0x1E1E1E1E\n"
  "v_mov_b32  v31, 0x1F1F1F1F\n"
  "v_mov_b32  v32, 0x20202020\n"
  "v_mov_b32  v33, 0x21212121\n"
  "v_mov_b32  v34, 0x22222222\n"
  "v_mov_b32  v35, 0x23232323\n"
  "v_mov_b32  v36, 0x24242424\n"
  "v_mov_b32  v37, 0x25252525\n"
  "v_mov_b32  v38, 0x26262626\n"
  "v_mov_b32  v39, 0x27272727\n"
  "v_mov_b32  v40, 0x28282828\n"
  "v_mov_b32  v41, 0x29292929\n"
  "v_mov_b32  v42, 0x2A2A2A2A\n"
  "v_mov_b32  v43, 0x2B2B2B2B\n"
  "v_mov_b32  v44, 0x2C2C2C2C\n"
  "v_mov_b32  v45, 0x2D2D2D2D\n"
  "v_mov_b32  v46, 0x2E2E2E2E\n"
  "v_mov_b32  v47, 0x2F2F2F2F\n"
  "v_mov_b32  v48, 0x30303030\n"
  "v_mov_b32  v49, 0x31313131\n"
  "v_mov_b32  v50, 0x32323232\n"
  "v_mov_b32  v51, 0x33333333\n"
  "v_mov_b32  v52, 0x34343434\n"
  "v_mov_b32  v53, 0x35353535\n"
  "v_mov_b32  v54, 0x36363636\n"
  "v_mov_b32  v55, 0x37373737\n"
  "v_mov_b32  v56, 0x38383838\n"
  "v_mov_b32  v57, 0x39393939\n"
  "v_mov_b32  v58, 0x3A3A3A3A\n"
  "v_mov_b32  v59, 0x3B3B3B3B\n"
  "v_mov_b32  v60, 0x3C3C3C3C\n"
  "v_mov_b32  v61, 0x3D3D3D3D\n"
  "v_mov_b32  v62, 0x3E3E3E3E\n"
  "v_mov_b32  v63, 0x3F3F3F3F\n"
  "v_mov_b32  v64, 0x40404040\n"
  "v_mov_b32  v65, 0x41414141\n"
  "v_mov_b32  v66, 0x42424242\n"
  "v_mov_b32  v67, 0x43434343\n"
  "v_mov_b32  v68, 0x44444444\n"
  "v_mov_b32  v69, 0x45454545\n"
  "v_mov_b32  v70, 0x46464646\n"
  "v_mov_b32  v71, 0x47474747\n"
  "v_mov_b32  v72, 0x48484848\n"
  "v_mov_b32  v73, 0x49494949\n"
  "v_mov_b32  v74, 0x4A4A4A4A\n"
  "v_mov_b32  v75, 0x4B4B4B4B\n"
  "v_mov_b32  v76, 0x4C4C4C4C\n"
  "v_mov_b32  v77, 0x4D4D4D4D\n"
  "v_mov_b32  v78, 0x4E4E4E4E\n"
  "v_mov_b32  v79, 0x4F4F4F4F\n"
  "v_mov_b32  v80, 0x50505050\n"
  "v_mov_b32  v81, 0x51515151\n"
  "v_mov_b32  v82, 0x52525252\n"
  "v_mov_b32  v83, 0x53535353\n"
  "v_mov_b32  v84, 0x54545454\n"
  "v_mov_b32  v85, 0x55555555\n"
  "v_mov_b32  v86, 0x56565656\n"
  "v_mov_b32  v87, 0x57575757\n"
  "v_mov_b32  v88, 0x58585858\n"
  "v_mov_b32  v89, 0x59595959\n"
  "v_mov_b32  v90, 0x5A5A5A5A\n"
  "v_mov_b32  v91, 0x5B5B5B5B\n"
  "v_mov_b32  v92, 0x5C5C5C5C\n"
  "v_mov_b32  v93, 0x5D5D5D5D\n"
  "v_mov_b32  v94, 0x5E5E5E5E\n"
  "v_mov_b32  v95, 0x5F5F5F5F\n"
  "v_mov_b32  v96, 0x60606060\n"
  "v_mov_b32  v97, 0x61616161\n"
  "v_mov_b32  v98, 0x62626262\n"
  "v_mov_b32  v99, 0x63636363\n"
  "v_mov_b32 v100, 0x64646464\n"
  "v_mov_b32 v101, 0x65656565\n"
  "v_mov_b32 v102, 0x66666666\n"
  "v_mov_b32 v103, 0x67676767\n"
  "v_mov_b32 v104, 0x68686868\n"
  "v_mov_b32 v105, 0x69696969\n"
  "v_mov_b32 v106, 0x6A6A6A6A\n"
  "v_mov_b32 v107, 0x6B6B6B6B\n"
  "v_mov_b32 v108, 0x6C6C6C6C\n"
  "v_mov_b32 v109, 0x6D6D6D6D\n"
  "v_mov_b32 v110, 0x6E6E6E6E\n"
  "v_mov_b32 v111, 0x6F6F6F6F\n"
  "v_mov_b32 v112, 0x70707070\n"
  "v_mov_b32 v113, 0x71717171\n"
  "v_mov_b32 v114, 0x72727272\n"
  "v_mov_b32 v115, 0x73737373\n"
  "v_mov_b32 v116, 0x74747474\n"
  "v_mov_b32 v117, 0x75757575\n"
  "v_mov_b32 v118, 0x76767676\n"
  "v_mov_b32 v119, 0x77777777\n"
  "v_mov_b32 v120, 0x78787878\n"
  "v_mov_b32 v121, 0x79797979\n"
  "v_mov_b32 v122, 0x7A7A7A7A\n"
  "v_mov_b32 v123, 0x7B7B7B7B\n"
  "v_mov_b32 v124, 0x7C7C7C7C\n"
  "v_mov_b32 v125, 0x7D7D7D7D\n"
  "v_mov_b32 v126, 0x7E7E7E7E\n"
  "v_mov_b32 v127, 0x7F7F7F7F\n"
  "v_mov_b32 v128, 0x80808080\n"
  "v_mov_b32 v129, 0x81818181\n"
  "v_mov_b32 v130, 0x82828282\n"
  "v_mov_b32 v131, 0x83838383\n"
  "v_mov_b32 v132, 0x84848484\n"
  "v_mov_b32 v133, 0x85858585\n"
  "v_mov_b32 v134, 0x86868686\n"
  "v_mov_b32 v135, 0x87878787\n"
  "v_mov_b32 v136, 0x88888888\n"
  "v_mov_b32 v137, 0x89898989\n"
  "v_mov_b32 v138, 0x8A8A8A8A\n"
  "v_mov_b32 v139, 0x8B8B8B8B\n"
  "v_mov_b32 v140, 0x8C8C8C8C\n"
  "v_mov_b32 v141, 0x8D8D8D8D\n"
  "v_mov_b32 v142, 0x8E8E8E8E\n"
  "v_mov_b32 v143, 0x8F8F8F8F\n"
  "v_mov_b32 v144, 0x90909090\n"
  "v_mov_b32 v145, 0x91919191\n"
  "v_mov_b32 v146, 0x92929292\n"
  "v_mov_b32 v147, 0x93939393\n"
  "v_mov_b32 v148, 0x94949494\n"
  "v_mov_b32 v149, 0x95959595\n"
  "v_mov_b32 v150, 0x96969696\n"
  "v_mov_b32 v151, 0x97979797\n"
  "v_mov_b32 v152, 0x98989898\n"
  "v_mov_b32 v153, 0x99999999\n"
  "v_mov_b32 v154, 0x9A9A9A9A\n"
  "v_mov_b32 v155, 0x9B9B9B9B\n"
  "v_mov_b32 v156, 0x9C9C9C9C\n"
  "v_mov_b32 v157, 0x9D9D9D9D\n"
  "v_mov_b32 v158, 0x9E9E9E9E\n"
  "v_mov_b32 v159, 0x9F9F9F9F\n"
  "v_mov_b32 v160, 0xA0A0A0A0\n"
  "v_mov_b32 v161, 0xA1A1A1A1\n"
  "v_mov_b32 v162, 0xA2A2A2A2\n"
  "v_mov_b32 v163, 0xA3A3A3A3\n"
  "v_mov_b32 v164, 0xA4A4A4A4\n"
  "v_mov_b32 v165, 0xA5A5A5A5\n"
  "v_mov_b32 v166, 0xA6A6A6A6\n"
  "v_mov_b32 v167, 0xA7A7A7A7\n"
  "v_mov_b32 v168, 0xA8A8A8A8\n"
  "v_mov_b32 v169, 0xA9A9A9A9\n"
  "v_mov_b32 v170, 0xAAAAAAAA\n"
  "v_mov_b32 v171, 0xABABABAB\n"
  "v_mov_b32 v172, 0xACACACAC\n"
  "v_mov_b32 v173, 0xADADADAD\n"
  "v_mov_b32 v174, 0xAEAEAEAE\n"
  "v_mov_b32 v175, 0xAFAFAFAF\n"
  "v_mov_b32 v176, 0xB0B0B0B0\n"
  "v_mov_b32 v177, 0xB1B1B1B1\n"
  "v_mov_b32 v178, 0xB2B2B2B2\n"
  "v_mov_b32 v179, 0xB3B3B3B3\n"
  "v_mov_b32 v180, 0xB4B4B4B4\n"
  "v_mov_b32 v181, 0xB5B5B5B5\n"
  "v_mov_b32 v182, 0xB6B6B6B6\n"
  "v_mov_b32 v183, 0xB7B7B7B7\n"
  "v_mov_b32 v184, 0xB8B8B8B8\n"
  "v_mov_b32 v185, 0xB9B9B9B9\n"
  "v_mov_b32 v186, 0xBABABABA\n"
  "v_mov_b32 v187, 0xBBBBBBBB\n"
  "v_mov_b32 v188, 0xBCBCBCBC\n"
  "v_mov_b32 v189, 0xBDBDBDBD\n"
  "v_mov_b32 v190, 0xBEBEBEBE\n"
  "v_mov_b32 v191, 0xBFBFBFBF\n"
  "v_mov_b32 v192, 0xC0C0C0C0\n"
  "v_mov_b32 v193, 0xC1C1C1C1\n"
  "v_mov_b32 v194, 0xC2C2C2C2\n"
  "v_mov_b32 v195, 0xC3C3C3C3\n"
  "v_mov_b32 v196, 0xC4C4C4C4\n"
  "v_mov_b32 v197, 0xC5C5C5C5\n"
  "v_mov_b32 v198, 0xC6C6C6C6\n"
  "v_mov_b32 v199, 0xC7C7C7C7\n"
  "v_mov_b32 v200, 0xC8C8C8C8\n"
  "v_mov_b32 v201, 0xC9C9C9C9\n"
  "v_mov_b32 v202, 0xCACACACA\n"
  "v_mov_b32 v203, 0xCBCBCBCB\n"
  "v_mov_b32 v204, 0xCCCCCCCC\n"
  "v_mov_b32 v205, 0xCDCDCDCD\n"
  "v_mov_b32 v206, 0xCECECECE\n"
  "v_mov_b32 v207, 0xCFCFCFCF\n"
  "v_mov_b32 v208, 0xD0D0D0D0\n"
  "v_mov_b32 v209, 0xD1D1D1D1\n"
  "v_mov_b32 v210, 0xD2D2D2D2\n"
  "v_mov_b32 v211, 0xD3D3D3D3\n"
  "v_mov_b32 v212, 0xD4D4D4D4\n"
  "v_mov_b32 v213, 0xD5D5D5D5\n"
  "v_mov_b32 v214, 0xD6D6D6D6\n"
  "v_mov_b32 v215, 0xD7D7D7D7\n"
  "v_mov_b32 v216, 0xD8D8D8D8\n"
  "v_mov_b32 v217, 0xD9D9D9D9\n"
  "v_mov_b32 v218, 0xDADADADA\n"
  "v_mov_b32 v219, 0xDBDBDBDB\n"
  "v_mov_b32 v220, 0xDCDCDCDC\n"
  "v_mov_b32 v221, 0xDDDDDDDD\n"
  "v_mov_b32 v222, 0xDEDEDEDE\n"
  "v_mov_b32 v223, 0xDFDFDFDF\n"
  "v_mov_b32 v224, 0xE0E0E0E0\n"
  "v_mov_b32 v225, 0xE1E1E1E1\n"
  "v_mov_b32 v226, 0xE2E2E2E2\n"
  "v_mov_b32 v227, 0xE3E3E3E3\n"
  "v_mov_b32 v228, 0xE4E4E4E4\n"
  "v_mov_b32 v229, 0xE5E5E5E5\n"
  "v_mov_b32 v230, 0xE6E6E6E6\n"
  "v_mov_b32 v231, 0xE7E7E7E7\n"
  "v_mov_b32 v232, 0xE8E8E8E8\n"
  "v_mov_b32 v233, 0xE9E9E9E9\n"
  "v_mov_b32 v234, 0xEAEAEAEA\n"
  "v_mov_b32 v235, 0xEBEBEBEB\n"
  "v_mov_b32 v236, 0xECECECEC\n"
  "v_mov_b32 v237, 0xEDEDEDED\n"
  "v_mov_b32 v238, 0xEEEEEEEE\n"
  "v_mov_b32 v239, 0xEFEFEFEF\n"
  "v_mov_b32 v240, 0xF0F0F0F0\n"
  "v_mov_b32 v241, 0xF1F1F1F1\n"
  "v_mov_b32 v242, 0xF2F2F2F2\n"
  "v_mov_b32 v243, 0xF3F3F3F3\n"
  "v_mov_b32 v244, 0xF4F4F4F4\n"
  "v_mov_b32 v245, 0xF5F5F5F5\n"
  "v_mov_b32 v246, 0xF6F6F6F6\n"
  "v_mov_b32 v247, 0xF7F7F7F7\n"
  "v_mov_b32 v248, 0xF8F8F8F8\n"
  "v_mov_b32 v249, 0xF9F9F9F9\n"
  "v_mov_b32 v250, 0xFAFAFAFA\n"
  "v_mov_b32 v251, 0xFBFBFBFB\n"
  "v_mov_b32 v252, 0xFCFCFCFC\n"
  "v_mov_b32 v253, 0xFDFDFDFD\n"
  "v_mov_b32 v254, 0xFEFEFEFE\n"
  "v_mov_b32 v255, 0xFFFFFFFF\n"
  : : : "v0", "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14", "v15", "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28", "v29", "v30", "v31", "v32", "v33", "v34", "v35", "v36", "v37", "v38", "v39", "v40", "v41", "v42", "v43", "v44", "v45", "v46", "v47", "v48", "v49", "v50", "v51", "v52", "v53", "v54", "v55", "v56", "v57", "v58", "v59", "v60", "v61", "v62", "v63", "v64", "v65", "v66", "v67", "v68", "v69", "v70", "v71", "v72", "v73", "v74", "v75", "v76", "v77", "v78", "v79", "v80", "v81", "v82", "v83", "v84", "v85", "v86", "v87", "v88", "v89", "v90", "v91", "v92", "v93", "v94", "v95", "v96", "v97", "v98", "v99", "v100", "v101", "v102", "v103", "v104", "v105", "v106", "v107", "v108", "v109", "v110", "v111", "v112", "v113", "v114", "v115", "v116", "v117", "v118", "v119", "v120", "v121", "v122", "v123", "v124", "v125", "v126", "v127", "v128", "v129", "v130", "v131", "v132", "v133", "v134", "v135", "v136", "v137", "v138", "v139", "v140", "v141", "v142", "v143", "v144", "v145", "v146", "v147", "v148", "v149", "v150", "v151", "v152", "v153", "v154", "v155", "v156", "v157", "v158", "v159", "v160", "v161", "v162", "v163", "v164", "v165", "v166", "v167", "v168", "v169", "v170", "v171", "v172", "v173", "v174", "v175", "v176", "v177", "v178", "v179", "v180", "v181", "v182", "v183", "v184", "v185", "v186", "v187", "v188", "v189", "v190", "v191", "v192", "v193", "v194", "v195", "v196", "v197", "v198", "v199", "v200", "v201", "v202", "v203", "v204", "v205", "v206", "v207", "v208", "v209", "v210", "v211", "v212", "v213", "v214", "v215", "v216", "v217", "v218", "v219", "v220", "v221", "v222", "v223", "v224", "v225", "v226", "v227", "v228", "v229", "v230", "v231", "v232", "v233", "v234", "v235", "v236", "v237", "v238", "v239", "v240", "v241", "v242", "v243", "v244", "v245", "v246", "v247", "v248", "v249", "v250", "v251", "v252", "v253", "v254", "v255");
  // GPU BREAKPOINT - VGPR
}

__global__ void set_known_sgpr_values_kernel() {
asm volatile(
  "s_mov_b32   s0, 0x00000000\n"
  "s_mov_b32   s1, 0x01010101\n"
  "s_mov_b32   s2, 0x02020202\n"
  "s_mov_b32   s3, 0x03030303\n"
  "s_mov_b32   s4, 0x04040404\n"
  "s_mov_b32   s5, 0x05050505\n"
  "s_mov_b32   s6, 0x06060606\n"
  "s_mov_b32   s7, 0x07070707\n"
  "s_mov_b32   s8, 0x08080808\n"
  "s_mov_b32   s9, 0x09090909\n"
  "s_mov_b32  s10, 0x0A0A0A0A\n"
  "s_mov_b32  s11, 0x0B0B0B0B\n"
  "s_mov_b32  s12, 0x0C0C0C0C\n"
  "s_mov_b32  s13, 0x0D0D0D0D\n"
  "s_mov_b32  s14, 0x0E0E0E0E\n"
  "s_mov_b32  s15, 0x0F0F0F0F\n"
  "s_mov_b32  s16, 0x10101010\n"
  "s_mov_b32  s17, 0x11111111\n"
  "s_mov_b32  s18, 0x12121212\n"
  "s_mov_b32  s19, 0x13131313\n"
  "s_mov_b32  s20, 0x14141414\n"
  "s_mov_b32  s21, 0x15151515\n"
  "s_mov_b32  s22, 0x16161616\n"
  "s_mov_b32  s23, 0x17171717\n"
  "s_mov_b32  s24, 0x18181818\n"
  "s_mov_b32  s25, 0x19191919\n"
  "s_mov_b32  s26, 0x1A1A1A1A\n"
  "s_mov_b32  s27, 0x1B1B1B1B\n"
  "s_mov_b32  s28, 0x1C1C1C1C\n"
  "s_mov_b32  s29, 0x1D1D1D1D\n"
  "s_mov_b32  s30, 0x1E1E1E1E\n"
  "s_mov_b32  s31, 0x1F1F1F1F\n"
  "s_mov_b32  s32, 0x20202020\n"
  "s_mov_b32  s33, 0x21212121\n"
  "s_mov_b32  s34, 0x22222222\n"
  "s_mov_b32  s35, 0x23232323\n"
  "s_mov_b32  s36, 0x24242424\n"
  "s_mov_b32  s37, 0x25252525\n"
  "s_mov_b32  s38, 0x26262626\n"
  "s_mov_b32  s39, 0x27272727\n"
  "s_mov_b32  s40, 0x28282828\n"
  "s_mov_b32  s41, 0x29292929\n"
  "s_mov_b32  s42, 0x2A2A2A2A\n"
  "s_mov_b32  s43, 0x2B2B2B2B\n"
  "s_mov_b32  s44, 0x2C2C2C2C\n"
  "s_mov_b32  s45, 0x2D2D2D2D\n"
  "s_mov_b32  s46, 0x2E2E2E2E\n"
  "s_mov_b32  s47, 0x2F2F2F2F\n"
  "s_mov_b32  s48, 0x30303030\n"
  "s_mov_b32  s49, 0x31313131\n"
  "s_mov_b32  s50, 0x32323232\n"
  "s_mov_b32  s51, 0x33333333\n"
  "s_mov_b32  s52, 0x34343434\n"
  "s_mov_b32  s53, 0x35353535\n"
  "s_mov_b32  s54, 0x36363636\n"
  "s_mov_b32  s55, 0x37373737\n"
  "s_mov_b32  s56, 0x38383838\n"
  "s_mov_b32  s57, 0x39393939\n"
  "s_mov_b32  s58, 0x3A3A3A3A\n"
  "s_mov_b32  s59, 0x3B3B3B3B\n"
  "s_mov_b32  s60, 0x3C3C3C3C\n"
  "s_mov_b32  s61, 0x3D3D3D3D\n"
  "s_mov_b32  s62, 0x3E3E3E3E\n"
  "s_mov_b32  s63, 0x3F3F3F3F\n"
  "s_mov_b32  s64, 0x40404040\n"
  "s_mov_b32  s65, 0x41414141\n"
  "s_mov_b32  s66, 0x42424242\n"
  "s_mov_b32  s67, 0x43434343\n"
  "s_mov_b32  s68, 0x44444444\n"
  "s_mov_b32  s69, 0x45454545\n"
  "s_mov_b32  s70, 0x46464646\n"
  "s_mov_b32  s71, 0x47474747\n"
  "s_mov_b32  s72, 0x48484848\n"
  "s_mov_b32  s73, 0x49494949\n"
  "s_mov_b32  s74, 0x4A4A4A4A\n"
  "s_mov_b32  s75, 0x4B4B4B4B\n"
  "s_mov_b32  s76, 0x4C4C4C4C\n"
  "s_mov_b32  s77, 0x4D4D4D4D\n"
  "s_mov_b32  s78, 0x4E4E4E4E\n"
  "s_mov_b32  s79, 0x4F4F4F4F\n"
  "s_mov_b32  s80, 0x50505050\n"
  "s_mov_b32  s81, 0x51515151\n"
  "s_mov_b32  s82, 0x52525252\n"
  "s_mov_b32  s83, 0x53535353\n"
  "s_mov_b32  s84, 0x54545454\n"
  "s_mov_b32  s85, 0x55555555\n"
  "s_mov_b32  s86, 0x56565656\n"
  "s_mov_b32  s87, 0x57575757\n"
  "s_mov_b32  s88, 0x58585858\n"
  "s_mov_b32  s89, 0x59595959\n"
  "s_mov_b32  s90, 0x5A5A5A5A\n"
  "s_mov_b32  s91, 0x5B5B5B5B\n"
  "s_mov_b32  s92, 0x5C5C5C5C\n"
  "s_mov_b32  s93, 0x5D5D5D5D\n"
  "s_mov_b32  s94, 0x5E5E5E5E\n"
  "s_mov_b32  s95, 0x5F5F5F5F\n"
  "s_mov_b32  s96, 0x60606060\n"
  "s_mov_b32  s97, 0x61616161\n"
  "s_mov_b32  s98, 0x62626262\n"
  "s_mov_b32  s99, 0x63636363\n"
  "s_mov_b32 s100, 0x64646464\n"
  "s_mov_b32 s101, 0x65656565\n"
  : : : "s0", "s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11", "s12", "s13", "s14", "s15", "s16", "s17", "s18", "s19", "s20", "s21", "s22", "s23", "s24", "s25", "s26", "s27", "s28", "s29", "s30", "s31", "s32", "s33", "s34", "s35", "s36", "s37", "s38", "s39", "s40", "s41", "s42", "s43", "s44", "s45", "s46", "s47", "s48", "s49", "s50", "s51", "s52", "s53", "s54", "s55", "s56", "s57", "s58", "s59", "s60", "s61", "s62", "s63", "s64", "s65", "s66", "s67", "s68", "s69", "s70", "s71", "s72", "s73", "s74", "s75", "s76", "s77", "s78", "s79", "s80", "s81", "s82", "s83", "s84", "s85", "s86", "s87", "s88", "s89", "s90", "s91", "s92", "s93", "s94", "s95", "s96", "s97", "s98", "s99", "s100", "s101");
  // GPU BREAKPOINT - SGPR
}

__global__ void set_known_agpr_values_kernel() {
asm volatile(
  "v_mov_b32             v0, 0x00000000\n"
  "v_accvgpr_write_b32   a0, v0\n"
  "v_mov_b32             v0, 0x01010101\n"
  "v_accvgpr_write_b32   a1, v0\n"
  "v_mov_b32             v0, 0x02020202\n"
  "v_accvgpr_write_b32   a2, v0\n"
  "v_mov_b32             v0, 0x03030303\n"
  "v_accvgpr_write_b32   a3, v0\n"
  "v_mov_b32             v0, 0x04040404\n"
  "v_accvgpr_write_b32   a4, v0\n"
  "v_mov_b32             v0, 0x05050505\n"
  "v_accvgpr_write_b32   a5, v0\n"
  "v_mov_b32             v0, 0x06060606\n"
  "v_accvgpr_write_b32   a6, v0\n"
  "v_mov_b32             v0, 0x07070707\n"
  "v_accvgpr_write_b32   a7, v0\n"
  "v_mov_b32             v0, 0x08080808\n"
  "v_accvgpr_write_b32   a8, v0\n"
  "v_mov_b32             v0, 0x09090909\n"
  "v_accvgpr_write_b32   a9, v0\n"
  "v_mov_b32             v0, 0x0A0A0A0A\n"
  "v_accvgpr_write_b32  a10, v0\n"
  "v_mov_b32             v0, 0x0B0B0B0B\n"
  "v_accvgpr_write_b32  a11, v0\n"
  "v_mov_b32             v0, 0x0C0C0C0C\n"
  "v_accvgpr_write_b32  a12, v0\n"
  "v_mov_b32             v0, 0x0D0D0D0D\n"
  "v_accvgpr_write_b32  a13, v0\n"
  "v_mov_b32             v0, 0x0E0E0E0E\n"
  "v_accvgpr_write_b32  a14, v0\n"
  "v_mov_b32             v0, 0x0F0F0F0F\n"
  "v_accvgpr_write_b32  a15, v0\n"
  "v_mov_b32             v0, 0x10101010\n"
  "v_accvgpr_write_b32  a16, v0\n"
  "v_mov_b32             v0, 0x11111111\n"
  "v_accvgpr_write_b32  a17, v0\n"
  "v_mov_b32             v0, 0x12121212\n"
  "v_accvgpr_write_b32  a18, v0\n"
  "v_mov_b32             v0, 0x13131313\n"
  "v_accvgpr_write_b32  a19, v0\n"
  "v_mov_b32             v0, 0x14141414\n"
  "v_accvgpr_write_b32  a20, v0\n"
  "v_mov_b32             v0, 0x15151515\n"
  "v_accvgpr_write_b32  a21, v0\n"
  "v_mov_b32             v0, 0x16161616\n"
  "v_accvgpr_write_b32  a22, v0\n"
  "v_mov_b32             v0, 0x17171717\n"
  "v_accvgpr_write_b32  a23, v0\n"
  "v_mov_b32             v0, 0x18181818\n"
  "v_accvgpr_write_b32  a24, v0\n"
  "v_mov_b32             v0, 0x19191919\n"
  "v_accvgpr_write_b32  a25, v0\n"
  "v_mov_b32             v0, 0x1A1A1A1A\n"
  "v_accvgpr_write_b32  a26, v0\n"
  "v_mov_b32             v0, 0x1B1B1B1B\n"
  "v_accvgpr_write_b32  a27, v0\n"
  "v_mov_b32             v0, 0x1C1C1C1C\n"
  "v_accvgpr_write_b32  a28, v0\n"
  "v_mov_b32             v0, 0x1D1D1D1D\n"
  "v_accvgpr_write_b32  a29, v0\n"
  "v_mov_b32             v0, 0x1E1E1E1E\n"
  "v_accvgpr_write_b32  a30, v0\n"
  "v_mov_b32             v0, 0x1F1F1F1F\n"
  "v_accvgpr_write_b32  a31, v0\n"
  "v_mov_b32             v0, 0x20202020\n"
  "v_accvgpr_write_b32  a32, v0\n"
  "v_mov_b32             v0, 0x21212121\n"
  "v_accvgpr_write_b32  a33, v0\n"
  "v_mov_b32             v0, 0x22222222\n"
  "v_accvgpr_write_b32  a34, v0\n"
  "v_mov_b32             v0, 0x23232323\n"
  "v_accvgpr_write_b32  a35, v0\n"
  "v_mov_b32             v0, 0x24242424\n"
  "v_accvgpr_write_b32  a36, v0\n"
  "v_mov_b32             v0, 0x25252525\n"
  "v_accvgpr_write_b32  a37, v0\n"
  "v_mov_b32             v0, 0x26262626\n"
  "v_accvgpr_write_b32  a38, v0\n"
  "v_mov_b32             v0, 0x27272727\n"
  "v_accvgpr_write_b32  a39, v0\n"
  "v_mov_b32             v0, 0x28282828\n"
  "v_accvgpr_write_b32  a40, v0\n"
  "v_mov_b32             v0, 0x29292929\n"
  "v_accvgpr_write_b32  a41, v0\n"
  "v_mov_b32             v0, 0x2A2A2A2A\n"
  "v_accvgpr_write_b32  a42, v0\n"
  "v_mov_b32             v0, 0x2B2B2B2B\n"
  "v_accvgpr_write_b32  a43, v0\n"
  "v_mov_b32             v0, 0x2C2C2C2C\n"
  "v_accvgpr_write_b32  a44, v0\n"
  "v_mov_b32             v0, 0x2D2D2D2D\n"
  "v_accvgpr_write_b32  a45, v0\n"
  "v_mov_b32             v0, 0x2E2E2E2E\n"
  "v_accvgpr_write_b32  a46, v0\n"
  "v_mov_b32             v0, 0x2F2F2F2F\n"
  "v_accvgpr_write_b32  a47, v0\n"
  "v_mov_b32             v0, 0x30303030\n"
  "v_accvgpr_write_b32  a48, v0\n"
  "v_mov_b32             v0, 0x31313131\n"
  "v_accvgpr_write_b32  a49, v0\n"
  "v_mov_b32             v0, 0x32323232\n"
  "v_accvgpr_write_b32  a50, v0\n"
  "v_mov_b32             v0, 0x33333333\n"
  "v_accvgpr_write_b32  a51, v0\n"
  "v_mov_b32             v0, 0x34343434\n"
  "v_accvgpr_write_b32  a52, v0\n"
  "v_mov_b32             v0, 0x35353535\n"
  "v_accvgpr_write_b32  a53, v0\n"
  "v_mov_b32             v0, 0x36363636\n"
  "v_accvgpr_write_b32  a54, v0\n"
  "v_mov_b32             v0, 0x37373737\n"
  "v_accvgpr_write_b32  a55, v0\n"
  "v_mov_b32             v0, 0x38383838\n"
  "v_accvgpr_write_b32  a56, v0\n"
  "v_mov_b32             v0, 0x39393939\n"
  "v_accvgpr_write_b32  a57, v0\n"
  "v_mov_b32             v0, 0x3A3A3A3A\n"
  "v_accvgpr_write_b32  a58, v0\n"
  "v_mov_b32             v0, 0x3B3B3B3B\n"
  "v_accvgpr_write_b32  a59, v0\n"
  "v_mov_b32             v0, 0x3C3C3C3C\n"
  "v_accvgpr_write_b32  a60, v0\n"
  "v_mov_b32             v0, 0x3D3D3D3D\n"
  "v_accvgpr_write_b32  a61, v0\n"
  "v_mov_b32             v0, 0x3E3E3E3E\n"
  "v_accvgpr_write_b32  a62, v0\n"
  "v_mov_b32             v0, 0x3F3F3F3F\n"
  "v_accvgpr_write_b32  a63, v0\n"
  "v_mov_b32             v0, 0x40404040\n"
  "v_accvgpr_write_b32  a64, v0\n"
  "v_mov_b32             v0, 0x41414141\n"
  "v_accvgpr_write_b32  a65, v0\n"
  "v_mov_b32             v0, 0x42424242\n"
  "v_accvgpr_write_b32  a66, v0\n"
  "v_mov_b32             v0, 0x43434343\n"
  "v_accvgpr_write_b32  a67, v0\n"
  "v_mov_b32             v0, 0x44444444\n"
  "v_accvgpr_write_b32  a68, v0\n"
  "v_mov_b32             v0, 0x45454545\n"
  "v_accvgpr_write_b32  a69, v0\n"
  "v_mov_b32             v0, 0x46464646\n"
  "v_accvgpr_write_b32  a70, v0\n"
  "v_mov_b32             v0, 0x47474747\n"
  "v_accvgpr_write_b32  a71, v0\n"
  "v_mov_b32             v0, 0x48484848\n"
  "v_accvgpr_write_b32  a72, v0\n"
  "v_mov_b32             v0, 0x49494949\n"
  "v_accvgpr_write_b32  a73, v0\n"
  "v_mov_b32             v0, 0x4A4A4A4A\n"
  "v_accvgpr_write_b32  a74, v0\n"
  "v_mov_b32             v0, 0x4B4B4B4B\n"
  "v_accvgpr_write_b32  a75, v0\n"
  "v_mov_b32             v0, 0x4C4C4C4C\n"
  "v_accvgpr_write_b32  a76, v0\n"
  "v_mov_b32             v0, 0x4D4D4D4D\n"
  "v_accvgpr_write_b32  a77, v0\n"
  "v_mov_b32             v0, 0x4E4E4E4E\n"
  "v_accvgpr_write_b32  a78, v0\n"
  "v_mov_b32             v0, 0x4F4F4F4F\n"
  "v_accvgpr_write_b32  a79, v0\n"
  "v_mov_b32             v0, 0x50505050\n"
  "v_accvgpr_write_b32  a80, v0\n"
  "v_mov_b32             v0, 0x51515151\n"
  "v_accvgpr_write_b32  a81, v0\n"
  "v_mov_b32             v0, 0x52525252\n"
  "v_accvgpr_write_b32  a82, v0\n"
  "v_mov_b32             v0, 0x53535353\n"
  "v_accvgpr_write_b32  a83, v0\n"
  "v_mov_b32             v0, 0x54545454\n"
  "v_accvgpr_write_b32  a84, v0\n"
  "v_mov_b32             v0, 0x55555555\n"
  "v_accvgpr_write_b32  a85, v0\n"
  "v_mov_b32             v0, 0x56565656\n"
  "v_accvgpr_write_b32  a86, v0\n"
  "v_mov_b32             v0, 0x57575757\n"
  "v_accvgpr_write_b32  a87, v0\n"
  "v_mov_b32             v0, 0x58585858\n"
  "v_accvgpr_write_b32  a88, v0\n"
  "v_mov_b32             v0, 0x59595959\n"
  "v_accvgpr_write_b32  a89, v0\n"
  "v_mov_b32             v0, 0x5A5A5A5A\n"
  "v_accvgpr_write_b32  a90, v0\n"
  "v_mov_b32             v0, 0x5B5B5B5B\n"
  "v_accvgpr_write_b32  a91, v0\n"
  "v_mov_b32             v0, 0x5C5C5C5C\n"
  "v_accvgpr_write_b32  a92, v0\n"
  "v_mov_b32             v0, 0x5D5D5D5D\n"
  "v_accvgpr_write_b32  a93, v0\n"
  "v_mov_b32             v0, 0x5E5E5E5E\n"
  "v_accvgpr_write_b32  a94, v0\n"
  "v_mov_b32             v0, 0x5F5F5F5F\n"
  "v_accvgpr_write_b32  a95, v0\n"
  "v_mov_b32             v0, 0x60606060\n"
  "v_accvgpr_write_b32  a96, v0\n"
  "v_mov_b32             v0, 0x61616161\n"
  "v_accvgpr_write_b32  a97, v0\n"
  "v_mov_b32             v0, 0x62626262\n"
  "v_accvgpr_write_b32  a98, v0\n"
  "v_mov_b32             v0, 0x63636363\n"
  "v_accvgpr_write_b32  a99, v0\n"
  "v_mov_b32             v0, 0x64646464\n"
  "v_accvgpr_write_b32 a100, v0\n"
  "v_mov_b32             v0, 0x65656565\n"
  "v_accvgpr_write_b32 a101, v0\n"
  "v_mov_b32             v0, 0x66666666\n"
  "v_accvgpr_write_b32 a102, v0\n"
  "v_mov_b32             v0, 0x67676767\n"
  "v_accvgpr_write_b32 a103, v0\n"
  "v_mov_b32             v0, 0x68686868\n"
  "v_accvgpr_write_b32 a104, v0\n"
  "v_mov_b32             v0, 0x69696969\n"
  "v_accvgpr_write_b32 a105, v0\n"
  "v_mov_b32             v0, 0x6A6A6A6A\n"
  "v_accvgpr_write_b32 a106, v0\n"
  "v_mov_b32             v0, 0x6B6B6B6B\n"
  "v_accvgpr_write_b32 a107, v0\n"
  "v_mov_b32             v0, 0x6C6C6C6C\n"
  "v_accvgpr_write_b32 a108, v0\n"
  "v_mov_b32             v0, 0x6D6D6D6D\n"
  "v_accvgpr_write_b32 a109, v0\n"
  "v_mov_b32             v0, 0x6E6E6E6E\n"
  "v_accvgpr_write_b32 a110, v0\n"
  "v_mov_b32             v0, 0x6F6F6F6F\n"
  "v_accvgpr_write_b32 a111, v0\n"
  "v_mov_b32             v0, 0x70707070\n"
  "v_accvgpr_write_b32 a112, v0\n"
  "v_mov_b32             v0, 0x71717171\n"
  "v_accvgpr_write_b32 a113, v0\n"
  "v_mov_b32             v0, 0x72727272\n"
  "v_accvgpr_write_b32 a114, v0\n"
  "v_mov_b32             v0, 0x73737373\n"
  "v_accvgpr_write_b32 a115, v0\n"
  "v_mov_b32             v0, 0x74747474\n"
  "v_accvgpr_write_b32 a116, v0\n"
  "v_mov_b32             v0, 0x75757575\n"
  "v_accvgpr_write_b32 a117, v0\n"
  "v_mov_b32             v0, 0x76767676\n"
  "v_accvgpr_write_b32 a118, v0\n"
  "v_mov_b32             v0, 0x77777777\n"
  "v_accvgpr_write_b32 a119, v0\n"
  "v_mov_b32             v0, 0x78787878\n"
  "v_accvgpr_write_b32 a120, v0\n"
  "v_mov_b32             v0, 0x79797979\n"
  "v_accvgpr_write_b32 a121, v0\n"
  "v_mov_b32             v0, 0x7A7A7A7A\n"
  "v_accvgpr_write_b32 a122, v0\n"
  "v_mov_b32             v0, 0x7B7B7B7B\n"
  "v_accvgpr_write_b32 a123, v0\n"
  "v_mov_b32             v0, 0x7C7C7C7C\n"
  "v_accvgpr_write_b32 a124, v0\n"
  "v_mov_b32             v0, 0x7D7D7D7D\n"
  "v_accvgpr_write_b32 a125, v0\n"
  "v_mov_b32             v0, 0x7E7E7E7E\n"
  "v_accvgpr_write_b32 a126, v0\n"
  "v_mov_b32             v0, 0x7F7F7F7F\n"
  "v_accvgpr_write_b32 a127, v0\n"
  "v_mov_b32             v0, 0x80808080\n"
  "v_accvgpr_write_b32 a128, v0\n"
  "v_mov_b32             v0, 0x81818181\n"
  "v_accvgpr_write_b32 a129, v0\n"
  "v_mov_b32             v0, 0x82828282\n"
  "v_accvgpr_write_b32 a130, v0\n"
  "v_mov_b32             v0, 0x83838383\n"
  "v_accvgpr_write_b32 a131, v0\n"
  "v_mov_b32             v0, 0x84848484\n"
  "v_accvgpr_write_b32 a132, v0\n"
  "v_mov_b32             v0, 0x85858585\n"
  "v_accvgpr_write_b32 a133, v0\n"
  "v_mov_b32             v0, 0x86868686\n"
  "v_accvgpr_write_b32 a134, v0\n"
  "v_mov_b32             v0, 0x87878787\n"
  "v_accvgpr_write_b32 a135, v0\n"
  "v_mov_b32             v0, 0x88888888\n"
  "v_accvgpr_write_b32 a136, v0\n"
  "v_mov_b32             v0, 0x89898989\n"
  "v_accvgpr_write_b32 a137, v0\n"
  "v_mov_b32             v0, 0x8A8A8A8A\n"
  "v_accvgpr_write_b32 a138, v0\n"
  "v_mov_b32             v0, 0x8B8B8B8B\n"
  "v_accvgpr_write_b32 a139, v0\n"
  "v_mov_b32             v0, 0x8C8C8C8C\n"
  "v_accvgpr_write_b32 a140, v0\n"
  "v_mov_b32             v0, 0x8D8D8D8D\n"
  "v_accvgpr_write_b32 a141, v0\n"
  "v_mov_b32             v0, 0x8E8E8E8E\n"
  "v_accvgpr_write_b32 a142, v0\n"
  "v_mov_b32             v0, 0x8F8F8F8F\n"
  "v_accvgpr_write_b32 a143, v0\n"
  "v_mov_b32             v0, 0x90909090\n"
  "v_accvgpr_write_b32 a144, v0\n"
  "v_mov_b32             v0, 0x91919191\n"
  "v_accvgpr_write_b32 a145, v0\n"
  "v_mov_b32             v0, 0x92929292\n"
  "v_accvgpr_write_b32 a146, v0\n"
  "v_mov_b32             v0, 0x93939393\n"
  "v_accvgpr_write_b32 a147, v0\n"
  "v_mov_b32             v0, 0x94949494\n"
  "v_accvgpr_write_b32 a148, v0\n"
  "v_mov_b32             v0, 0x95959595\n"
  "v_accvgpr_write_b32 a149, v0\n"
  "v_mov_b32             v0, 0x96969696\n"
  "v_accvgpr_write_b32 a150, v0\n"
  "v_mov_b32             v0, 0x97979797\n"
  "v_accvgpr_write_b32 a151, v0\n"
  "v_mov_b32             v0, 0x98989898\n"
  "v_accvgpr_write_b32 a152, v0\n"
  "v_mov_b32             v0, 0x99999999\n"
  "v_accvgpr_write_b32 a153, v0\n"
  "v_mov_b32             v0, 0x9A9A9A9A\n"
  "v_accvgpr_write_b32 a154, v0\n"
  "v_mov_b32             v0, 0x9B9B9B9B\n"
  "v_accvgpr_write_b32 a155, v0\n"
  "v_mov_b32             v0, 0x9C9C9C9C\n"
  "v_accvgpr_write_b32 a156, v0\n"
  "v_mov_b32             v0, 0x9D9D9D9D\n"
  "v_accvgpr_write_b32 a157, v0\n"
  "v_mov_b32             v0, 0x9E9E9E9E\n"
  "v_accvgpr_write_b32 a158, v0\n"
  "v_mov_b32             v0, 0x9F9F9F9F\n"
  "v_accvgpr_write_b32 a159, v0\n"
  "v_mov_b32             v0, 0xA0A0A0A0\n"
  "v_accvgpr_write_b32 a160, v0\n"
  "v_mov_b32             v0, 0xA1A1A1A1\n"
  "v_accvgpr_write_b32 a161, v0\n"
  "v_mov_b32             v0, 0xA2A2A2A2\n"
  "v_accvgpr_write_b32 a162, v0\n"
  "v_mov_b32             v0, 0xA3A3A3A3\n"
  "v_accvgpr_write_b32 a163, v0\n"
  "v_mov_b32             v0, 0xA4A4A4A4\n"
  "v_accvgpr_write_b32 a164, v0\n"
  "v_mov_b32             v0, 0xA5A5A5A5\n"
  "v_accvgpr_write_b32 a165, v0\n"
  "v_mov_b32             v0, 0xA6A6A6A6\n"
  "v_accvgpr_write_b32 a166, v0\n"
  "v_mov_b32             v0, 0xA7A7A7A7\n"
  "v_accvgpr_write_b32 a167, v0\n"
  "v_mov_b32             v0, 0xA8A8A8A8\n"
  "v_accvgpr_write_b32 a168, v0\n"
  "v_mov_b32             v0, 0xA9A9A9A9\n"
  "v_accvgpr_write_b32 a169, v0\n"
  "v_mov_b32             v0, 0xAAAAAAAA\n"
  "v_accvgpr_write_b32 a170, v0\n"
  "v_mov_b32             v0, 0xABABABAB\n"
  "v_accvgpr_write_b32 a171, v0\n"
  "v_mov_b32             v0, 0xACACACAC\n"
  "v_accvgpr_write_b32 a172, v0\n"
  "v_mov_b32             v0, 0xADADADAD\n"
  "v_accvgpr_write_b32 a173, v0\n"
  "v_mov_b32             v0, 0xAEAEAEAE\n"
  "v_accvgpr_write_b32 a174, v0\n"
  "v_mov_b32             v0, 0xAFAFAFAF\n"
  "v_accvgpr_write_b32 a175, v0\n"
  "v_mov_b32             v0, 0xB0B0B0B0\n"
  "v_accvgpr_write_b32 a176, v0\n"
  "v_mov_b32             v0, 0xB1B1B1B1\n"
  "v_accvgpr_write_b32 a177, v0\n"
  "v_mov_b32             v0, 0xB2B2B2B2\n"
  "v_accvgpr_write_b32 a178, v0\n"
  "v_mov_b32             v0, 0xB3B3B3B3\n"
  "v_accvgpr_write_b32 a179, v0\n"
  "v_mov_b32             v0, 0xB4B4B4B4\n"
  "v_accvgpr_write_b32 a180, v0\n"
  "v_mov_b32             v0, 0xB5B5B5B5\n"
  "v_accvgpr_write_b32 a181, v0\n"
  "v_mov_b32             v0, 0xB6B6B6B6\n"
  "v_accvgpr_write_b32 a182, v0\n"
  "v_mov_b32             v0, 0xB7B7B7B7\n"
  "v_accvgpr_write_b32 a183, v0\n"
  "v_mov_b32             v0, 0xB8B8B8B8\n"
  "v_accvgpr_write_b32 a184, v0\n"
  "v_mov_b32             v0, 0xB9B9B9B9\n"
  "v_accvgpr_write_b32 a185, v0\n"
  "v_mov_b32             v0, 0xBABABABA\n"
  "v_accvgpr_write_b32 a186, v0\n"
  "v_mov_b32             v0, 0xBBBBBBBB\n"
  "v_accvgpr_write_b32 a187, v0\n"
  "v_mov_b32             v0, 0xBCBCBCBC\n"
  "v_accvgpr_write_b32 a188, v0\n"
  "v_mov_b32             v0, 0xBDBDBDBD\n"
  "v_accvgpr_write_b32 a189, v0\n"
  "v_mov_b32             v0, 0xBEBEBEBE\n"
  "v_accvgpr_write_b32 a190, v0\n"
  "v_mov_b32             v0, 0xBFBFBFBF\n"
  "v_accvgpr_write_b32 a191, v0\n"
  "v_mov_b32             v0, 0xC0C0C0C0\n"
  "v_accvgpr_write_b32 a192, v0\n"
  "v_mov_b32             v0, 0xC1C1C1C1\n"
  "v_accvgpr_write_b32 a193, v0\n"
  "v_mov_b32             v0, 0xC2C2C2C2\n"
  "v_accvgpr_write_b32 a194, v0\n"
  "v_mov_b32             v0, 0xC3C3C3C3\n"
  "v_accvgpr_write_b32 a195, v0\n"
  "v_mov_b32             v0, 0xC4C4C4C4\n"
  "v_accvgpr_write_b32 a196, v0\n"
  "v_mov_b32             v0, 0xC5C5C5C5\n"
  "v_accvgpr_write_b32 a197, v0\n"
  "v_mov_b32             v0, 0xC6C6C6C6\n"
  "v_accvgpr_write_b32 a198, v0\n"
  "v_mov_b32             v0, 0xC7C7C7C7\n"
  "v_accvgpr_write_b32 a199, v0\n"
  "v_mov_b32             v0, 0xC8C8C8C8\n"
  "v_accvgpr_write_b32 a200, v0\n"
  "v_mov_b32             v0, 0xC9C9C9C9\n"
  "v_accvgpr_write_b32 a201, v0\n"
  "v_mov_b32             v0, 0xCACACACA\n"
  "v_accvgpr_write_b32 a202, v0\n"
  "v_mov_b32             v0, 0xCBCBCBCB\n"
  "v_accvgpr_write_b32 a203, v0\n"
  "v_mov_b32             v0, 0xCCCCCCCC\n"
  "v_accvgpr_write_b32 a204, v0\n"
  "v_mov_b32             v0, 0xCDCDCDCD\n"
  "v_accvgpr_write_b32 a205, v0\n"
  "v_mov_b32             v0, 0xCECECECE\n"
  "v_accvgpr_write_b32 a206, v0\n"
  "v_mov_b32             v0, 0xCFCFCFCF\n"
  "v_accvgpr_write_b32 a207, v0\n"
  "v_mov_b32             v0, 0xD0D0D0D0\n"
  "v_accvgpr_write_b32 a208, v0\n"
  "v_mov_b32             v0, 0xD1D1D1D1\n"
  "v_accvgpr_write_b32 a209, v0\n"
  "v_mov_b32             v0, 0xD2D2D2D2\n"
  "v_accvgpr_write_b32 a210, v0\n"
  "v_mov_b32             v0, 0xD3D3D3D3\n"
  "v_accvgpr_write_b32 a211, v0\n"
  "v_mov_b32             v0, 0xD4D4D4D4\n"
  "v_accvgpr_write_b32 a212, v0\n"
  "v_mov_b32             v0, 0xD5D5D5D5\n"
  "v_accvgpr_write_b32 a213, v0\n"
  "v_mov_b32             v0, 0xD6D6D6D6\n"
  "v_accvgpr_write_b32 a214, v0\n"
  "v_mov_b32             v0, 0xD7D7D7D7\n"
  "v_accvgpr_write_b32 a215, v0\n"
  "v_mov_b32             v0, 0xD8D8D8D8\n"
  "v_accvgpr_write_b32 a216, v0\n"
  "v_mov_b32             v0, 0xD9D9D9D9\n"
  "v_accvgpr_write_b32 a217, v0\n"
  "v_mov_b32             v0, 0xDADADADA\n"
  "v_accvgpr_write_b32 a218, v0\n"
  "v_mov_b32             v0, 0xDBDBDBDB\n"
  "v_accvgpr_write_b32 a219, v0\n"
  "v_mov_b32             v0, 0xDCDCDCDC\n"
  "v_accvgpr_write_b32 a220, v0\n"
  "v_mov_b32             v0, 0xDDDDDDDD\n"
  "v_accvgpr_write_b32 a221, v0\n"
  "v_mov_b32             v0, 0xDEDEDEDE\n"
  "v_accvgpr_write_b32 a222, v0\n"
  "v_mov_b32             v0, 0xDFDFDFDF\n"
  "v_accvgpr_write_b32 a223, v0\n"
  "v_mov_b32             v0, 0xE0E0E0E0\n"
  "v_accvgpr_write_b32 a224, v0\n"
  "v_mov_b32             v0, 0xE1E1E1E1\n"
  "v_accvgpr_write_b32 a225, v0\n"
  "v_mov_b32             v0, 0xE2E2E2E2\n"
  "v_accvgpr_write_b32 a226, v0\n"
  "v_mov_b32             v0, 0xE3E3E3E3\n"
  "v_accvgpr_write_b32 a227, v0\n"
  "v_mov_b32             v0, 0xE4E4E4E4\n"
  "v_accvgpr_write_b32 a228, v0\n"
  "v_mov_b32             v0, 0xE5E5E5E5\n"
  "v_accvgpr_write_b32 a229, v0\n"
  "v_mov_b32             v0, 0xE6E6E6E6\n"
  "v_accvgpr_write_b32 a230, v0\n"
  "v_mov_b32             v0, 0xE7E7E7E7\n"
  "v_accvgpr_write_b32 a231, v0\n"
  "v_mov_b32             v0, 0xE8E8E8E8\n"
  "v_accvgpr_write_b32 a232, v0\n"
  "v_mov_b32             v0, 0xE9E9E9E9\n"
  "v_accvgpr_write_b32 a233, v0\n"
  "v_mov_b32             v0, 0xEAEAEAEA\n"
  "v_accvgpr_write_b32 a234, v0\n"
  "v_mov_b32             v0, 0xEBEBEBEB\n"
  "v_accvgpr_write_b32 a235, v0\n"
  "v_mov_b32             v0, 0xECECECEC\n"
  "v_accvgpr_write_b32 a236, v0\n"
  "v_mov_b32             v0, 0xEDEDEDED\n"
  "v_accvgpr_write_b32 a237, v0\n"
  "v_mov_b32             v0, 0xEEEEEEEE\n"
  "v_accvgpr_write_b32 a238, v0\n"
  "v_mov_b32             v0, 0xEFEFEFEF\n"
  "v_accvgpr_write_b32 a239, v0\n"
  "v_mov_b32             v0, 0xF0F0F0F0\n"
  "v_accvgpr_write_b32 a240, v0\n"
  "v_mov_b32             v0, 0xF1F1F1F1\n"
  "v_accvgpr_write_b32 a241, v0\n"
  "v_mov_b32             v0, 0xF2F2F2F2\n"
  "v_accvgpr_write_b32 a242, v0\n"
  "v_mov_b32             v0, 0xF3F3F3F3\n"
  "v_accvgpr_write_b32 a243, v0\n"
  "v_mov_b32             v0, 0xF4F4F4F4\n"
  "v_accvgpr_write_b32 a244, v0\n"
  "v_mov_b32             v0, 0xF5F5F5F5\n"
  "v_accvgpr_write_b32 a245, v0\n"
  "v_mov_b32             v0, 0xF6F6F6F6\n"
  "v_accvgpr_write_b32 a246, v0\n"
  "v_mov_b32             v0, 0xF7F7F7F7\n"
  "v_accvgpr_write_b32 a247, v0\n"
  "v_mov_b32             v0, 0xF8F8F8F8\n"
  "v_accvgpr_write_b32 a248, v0\n"
  "v_mov_b32             v0, 0xF9F9F9F9\n"
  "v_accvgpr_write_b32 a249, v0\n"
  "v_mov_b32             v0, 0xFAFAFAFA\n"
  "v_accvgpr_write_b32 a250, v0\n"
  "v_mov_b32             v0, 0xFBFBFBFB\n"
  "v_accvgpr_write_b32 a251, v0\n"
  "v_mov_b32             v0, 0xFCFCFCFC\n"
  "v_accvgpr_write_b32 a252, v0\n"
  "v_mov_b32             v0, 0xFDFDFDFD\n"
  "v_accvgpr_write_b32 a253, v0\n"
  "v_mov_b32             v0, 0xFEFEFEFE\n"
  "v_accvgpr_write_b32 a254, v0\n"
  "v_mov_b32             v0, 0xFFFFFFFF\n"
  "v_accvgpr_write_b32 a255, v0\n"
  : : : "v0", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "a10", "a11", "a12", "a13", "a14", "a15", "a16", "a17", "a18", "a19", "a20", "a21", "a22", "a23", "a24", "a25", "a26", "a27", "a28", "a29", "a30", "a31", "a32", "a33", "a34", "a35", "a36", "a37", "a38", "a39", "a40", "a41", "a42", "a43", "a44", "a45", "a46", "a47", "a48", "a49", "a50", "a51", "a52", "a53", "a54", "a55", "a56", "a57", "a58", "a59", "a60", "a61", "a62", "a63", "a64", "a65", "a66", "a67", "a68", "a69", "a70", "a71", "a72", "a73", "a74", "a75", "a76", "a77", "a78", "a79", "a80", "a81", "a82", "a83", "a84", "a85", "a86", "a87", "a88", "a89", "a90", "a91", "a92", "a93", "a94", "a95", "a96", "a97", "a98", "a99", "a100", "a101", "a102", "a103", "a104", "a105", "a106", "a107", "a108", "a109", "a110", "a111", "a112", "a113", "a114", "a115", "a116", "a117", "a118", "a119", "a120", "a121", "a122", "a123", "a124", "a125", "a126", "a127", "a128", "a129", "a130", "a131", "a132", "a133", "a134", "a135", "a136", "a137", "a138", "a139", "a140", "a141", "a142", "a143", "a144", "a145", "a146", "a147", "a148", "a149", "a150", "a151", "a152", "a153", "a154", "a155", "a156", "a157", "a158", "a159", "a160", "a161", "a162", "a163", "a164", "a165", "a166", "a167", "a168", "a169", "a170", "a171", "a172", "a173", "a174", "a175", "a176", "a177", "a178", "a179", "a180", "a181", "a182", "a183", "a184", "a185", "a186", "a187", "a188", "a189", "a190", "a191", "a192", "a193", "a194", "a195", "a196", "a197", "a198", "a199", "a200", "a201", "a202", "a203", "a204", "a205", "a206", "a207", "a208", "a209", "a210", "a211", "a212", "a213", "a214", "a215", "a216", "a217", "a218", "a219", "a220", "a221", "a222", "a223", "a224", "a225", "a226", "a227", "a228", "a229", "a230", "a231", "a232", "a233", "a234", "a235", "a236", "a237", "a238", "a239", "a240", "a241", "a242", "a243", "a244", "a245", "a246", "a247", "a248", "a249", "a250", "a251", "a252", "a253", "a254", "a255");
  // GPU BREAKPOINT - AGPR
}

int main() {
  // Launch the kernel.
  printf("Launching kernel...\n"); // CPU BREAKPOINT - BEFORE LAUNCH
  static constexpr int WAVE_SIZE = 64;


  // Launch vgpr kernel.
  set_known_vgpr_values_kernel<<<
      dim3(1), // Number of blocks to launch
      dim3(WAVE_SIZE), // Number of threads to launch
      0, // number of bytes of additional shared memory to allocate
      hipStreamDefault // stream where the kernel should execute: default stream
      >>>();

  // Launch sgpr kernel.
  set_known_sgpr_values_kernel<<<
      dim3(1), // Number of blocks to launch
      dim3(WAVE_SIZE), // Number of threads to launch
      0, // number of bytes of additional shared memory to allocate
      hipStreamDefault // stream where the kernel should execute: default stream
      >>>();

  // Launch agpr kernel.
  set_known_agpr_values_kernel<<<
      dim3(1), // Number of blocks to launch
      dim3(WAVE_SIZE), // Number of threads to launch
      0, // number of bytes of additional shared memory to allocate
      hipStreamDefault // stream where the kernel should execute: default stream
      >>>();

  // Wait on all active streams on the current device.
  printf("Waiting for kernel to finish...\n");
  HIP_CHECK(hipDeviceSynchronize());

  printf("Done!\n");
}
