#include <hip/hip_runtime.h>
#include <iostream>

/// \brief Checks if the provided error code is \p hipSuccess and if not,
/// prints an error message to the standard error output and terminates the
/// program with an error code.
constexpr int error_exit_code = -1;
#define HIP_CHECK(condition)                                              \
  {                                                                       \
    const hipError_t error = condition;                                   \
    if (error != hipSuccess) {                                            \
      std::cerr << "An error encountered: \"" << hipGetErrorString(error) \
                << "\" at " << __FILE__ << ':' << __LINE__ << std::endl;  \
      std::exit(error_exit_code);                                         \
    }                                                                     \
  }

// Set the registers to known values so we can test reading and writing.
// You can regenerate the asm with `gen.py` in this directory if needed.
__global__ void set_known_reg_values_kernel() {
  asm volatile(
  "v_mov_b32   v0, 0xA3B1799D\n"
  "v_mov_b32   v1, 0x46685257\n"
  "v_mov_b32   v2, 0x392456DE\n"
  "v_mov_b32   v3, 0xBC8960A9\n"
  "v_mov_b32   v4, 0x6C031199\n"
  "v_mov_b32   v5, 0x07A0CA6E\n"
  "v_mov_b32   v6, 0x37F8A88B\n"
  "v_mov_b32   v7, 0x8B8148F6\n"
  "v_mov_b32   v8, 0x386ECBE0\n"
  "v_mov_b32   v9, 0x96DA1DAC\n"
  "v_mov_b32  v10, 0xCE4A2BBD\n"
  "v_mov_b32  v11, 0xB2B9437A\n"
  "v_mov_b32  v12, 0x571AA876\n"
  "v_mov_b32  v13, 0x27CD8130\n"
  "v_mov_b32  v14, 0x562B0F79\n"
  "v_mov_b32  v15, 0x17BE3111\n"
  "v_mov_b32  v16, 0x18C26797\n"
  "v_mov_b32  v17, 0xD8F56413\n"
  "v_mov_b32  v18, 0x9A8DCA03\n"
  "v_mov_b32  v19, 0xCE9FF57F\n"
  "v_mov_b32  v20, 0xBACFB3D0\n"
  "v_mov_b32  v21, 0x89463E85\n"
  "v_mov_b32  v22, 0x60E7A113\n"
  "v_mov_b32  v23, 0x8D5288F1\n"
  "v_mov_b32  v24, 0xDC98D2C1\n"
  "v_mov_b32  v25, 0x93CD59BF\n"
  "v_mov_b32  v26, 0xB45ED1F0\n"
  "v_mov_b32  v27, 0x19DB3AD0\n"
  "v_mov_b32  v28, 0x47294739\n"
  "v_mov_b32  v29, 0x5D65A441\n"
  "v_mov_b32  v30, 0x5EC42E08\n"
  "v_mov_b32  v31, 0xA5E5A5AB\n"
  "v_mov_b32  v32, 0xBAA80DD4\n"
  "v_mov_b32  v33, 0x29D4BEEF\n"
  "v_mov_b32  v34, 0x6123FDF7\n"
  "v_mov_b32  v35, 0x8E944239\n"
  "v_mov_b32  v36, 0xAF42E12F\n"
  "v_mov_b32  v37, 0xC6A7EE39\n"
  "v_mov_b32  v38, 0x50C187FC\n"
  "v_mov_b32  v39, 0x448AAA9E\n"
  "v_mov_b32  v40, 0x508EBAD7\n"
  "v_mov_b32  v41, 0xA7CAD415\n"
  "v_mov_b32  v42, 0x757750A9\n"
  "v_mov_b32  v43, 0x43CF2FDE\n"
  "v_mov_b32  v44, 0x95A76D79\n"
  "v_mov_b32  v45, 0x663F1C97\n"
  "v_mov_b32  v46, 0xFF5E9FF0\n"
  "v_mov_b32  v47, 0x827050A8\n"
  "v_mov_b32  v48, 0x1C11F735\n"
  "v_mov_b32  v49, 0xA0A04DC4\n"
  "v_mov_b32  v50, 0x10435A10\n"
  "v_mov_b32  v51, 0xFF01CF99\n"
  "v_mov_b32  v52, 0x877409A9\n"
  "v_mov_b32  v53, 0xB88139B9\n"
  "v_mov_b32  v54, 0xA4161293\n"
  "v_mov_b32  v55, 0x1C8EAEE9\n"
  "v_mov_b32  v56, 0x6F4CC69A\n"
  "v_mov_b32  v57, 0x74273CA3\n"
  "v_mov_b32  v58, 0xE9A1FA6F\n"
  "v_mov_b32  v59, 0x9BE578C7\n"
  "v_mov_b32  v60, 0x2720797D\n"
  "v_mov_b32  v61, 0xC333E861\n"
  "v_mov_b32  v62, 0x52FBE43B\n"
  "v_mov_b32  v63, 0x04FC6D82\n"
  "v_mov_b32  v64, 0xEDD96831\n"
  "v_mov_b32  v65, 0x4EB93EFF\n"
  "v_mov_b32  v66, 0x0ED42F1A\n"
  "v_mov_b32  v67, 0xF26B4776\n"
  "v_mov_b32  v68, 0xC40DB9B4\n"
  "v_mov_b32  v69, 0x8CBFEDB0\n"
  "v_mov_b32  v70, 0x4FCCA39A\n"
  "v_mov_b32  v71, 0xA65E688E\n"
  "v_mov_b32  v72, 0x847FD9B4\n"
  "v_mov_b32  v73, 0x1EFA2197\n"
  "v_mov_b32  v74, 0x3985C3CF\n"
  "v_mov_b32  v75, 0x568CC69B\n"
  "v_mov_b32  v76, 0x38602AB6\n"
  "v_mov_b32  v77, 0xA18FF6B6\n"
  "v_mov_b32  v78, 0x3A9BEDD4\n"
  "v_mov_b32  v79, 0xE7C99B26\n"
  "v_mov_b32  v80, 0xDC1110C1\n"
  "v_mov_b32  v81, 0x3CEDDF2D\n"
  "v_mov_b32  v82, 0xAB4220A7\n"
  "v_mov_b32  v83, 0x7900F7F9\n"
  "v_mov_b32  v84, 0xC8DCD19F\n"
  "v_mov_b32  v85, 0xCEB81F9D\n"
  "v_mov_b32  v86, 0x30BEB45F\n"
  "v_mov_b32  v87, 0x6E595ED3\n"
  "v_mov_b32  v88, 0x6C6FA611\n"
  "v_mov_b32  v89, 0xBAA4B71A\n"
  "v_mov_b32  v90, 0x1931E9EE\n"
  "v_mov_b32  v91, 0xDC96925E\n"
  "v_mov_b32  v92, 0x3FA7F104\n"
  "v_mov_b32  v93, 0x72D8567D\n"
  "v_mov_b32  v94, 0x6C006F61\n"
  "v_mov_b32  v95, 0x474EBC19\n"
  "v_mov_b32  v96, 0xEC5B227C\n"
  "v_mov_b32  v97, 0x8CE21EA3\n"
  "v_mov_b32  v98, 0xD605E770\n"
  "v_mov_b32  v99, 0xF8102383\n"
  "v_mov_b32 v100, 0xD9441FA5\n"
  "v_mov_b32 v101, 0x2A935D62\n"
  "v_mov_b32 v102, 0x7C52FA17\n"
  "v_mov_b32 v103, 0x0F02BAD0\n"
  "v_mov_b32 v104, 0x610461E3\n"
  "v_mov_b32 v105, 0xFC3D3348\n"
  "v_mov_b32 v106, 0x747B6DBA\n"
  "v_mov_b32 v107, 0xB7E99ACA\n"
  "v_mov_b32 v108, 0x27A0C3D7\n"
  "v_mov_b32 v109, 0x4BF50B52\n"
  "v_mov_b32 v110, 0xF7FD5646\n"
  "v_mov_b32 v111, 0x8ACD4E10\n"
  "v_mov_b32 v112, 0xBF7B539B\n"
  "v_mov_b32 v113, 0x0EA2622B\n"
  "v_mov_b32 v114, 0x958CA9BA\n"
  "v_mov_b32 v115, 0x284D82E5\n"
  "v_mov_b32 v116, 0x2F923996\n"
  "v_mov_b32 v117, 0x98543881\n"
  "v_mov_b32 v118, 0x3C365296\n"
  "v_mov_b32 v119, 0x98326856\n"
  "v_mov_b32 v120, 0x9E8FC965\n"
  "v_mov_b32 v121, 0x85D51695\n"
  "v_mov_b32 v122, 0xEF48E8D5\n"
  "v_mov_b32 v123, 0xB758588D\n"
  "v_mov_b32 v124, 0x3D1A85DD\n"
  "v_mov_b32 v125, 0x655238A6\n"
  "v_mov_b32 v126, 0x4CCC9BC2\n"
  "v_mov_b32 v127, 0x12922F83\n"
  "v_mov_b32 v128, 0xFF002D4D\n"
  "v_mov_b32 v129, 0x43E42CAF\n"
  "v_mov_b32 v130, 0xEEEA163E\n"
  "v_mov_b32 v131, 0xE1805081\n"
  "v_mov_b32 v132, 0xE117DAC3\n"
  "v_mov_b32 v133, 0x5E9953D2\n"
  "v_mov_b32 v134, 0x286218B8\n"
  "v_mov_b32 v135, 0xB41B3143\n"
  "v_mov_b32 v136, 0xA9D3D7C7\n"
  "v_mov_b32 v137, 0x2260E70F\n"
  "v_mov_b32 v138, 0x8DA01097\n"
  "v_mov_b32 v139, 0x45B89CD9\n"
  "v_mov_b32 v140, 0x9AD620AB\n"
  "v_mov_b32 v141, 0xB7B56EA7\n"
  "v_mov_b32 v142, 0x7D106C60\n"
  "v_mov_b32 v143, 0xD89A40C0\n"
  "v_mov_b32 v144, 0x46D483F3\n"
  "v_mov_b32 v145, 0x00E85ECE\n"
  "v_mov_b32 v146, 0xC56811CD\n"
  "v_mov_b32 v147, 0x430F801D\n"
  "v_mov_b32 v148, 0xBDC14F1F\n"
  "v_mov_b32 v149, 0x0279B6A6\n"
  "v_mov_b32 v150, 0xE767DCEA\n"
  "v_mov_b32 v151, 0x8BABCE3B\n"
  "v_mov_b32 v152, 0xD5A804EB\n"
  "v_mov_b32 v153, 0x25E97977\n"
  "v_mov_b32 v154, 0x20A04502\n"
  "v_mov_b32 v155, 0x4EEA04E7\n"
  "v_mov_b32 v156, 0xDC570131\n"
  "v_mov_b32 v157, 0xE61FECC0\n"
  "v_mov_b32 v158, 0x1A50AEC3\n"
  "v_mov_b32 v159, 0xEE0CAEB5\n"
  "v_mov_b32 v160, 0xDD56CC94\n"
  "v_mov_b32 v161, 0xCF8EBC5A\n"
  "v_mov_b32 v162, 0xE1A47E10\n"
  "v_mov_b32 v163, 0x0658663A\n"
  "v_mov_b32 v164, 0xEE49F329\n"
  "v_mov_b32 v165, 0xCF8D446A\n"
  "v_mov_b32 v166, 0x444D610B\n"
  "v_mov_b32 v167, 0x1BAC27A7\n"
  "v_mov_b32 v168, 0xDF465290\n"
  "v_mov_b32 v169, 0xDBCCC477\n"
  "v_mov_b32 v170, 0x38F16A81\n"
  "v_mov_b32 v171, 0x75D66ED4\n"
  "v_mov_b32 v172, 0x3A43B2BA\n"
  "v_mov_b32 v173, 0x3170F437\n"
  "v_mov_b32 v174, 0x5408F9AC\n"
  "v_mov_b32 v175, 0xDD463C09\n"
  "v_mov_b32 v176, 0x4774BC58\n"
  "v_mov_b32 v177, 0x89456F27\n"
  "v_mov_b32 v178, 0xF071D879\n"
  "v_mov_b32 v179, 0xF86C2CA2\n"
  "v_mov_b32 v180, 0x43F59A85\n"
  "v_mov_b32 v181, 0x6F3F920C\n"
  "v_mov_b32 v182, 0x504D281F\n"
  "v_mov_b32 v183, 0x82EC9F2D\n"
  "v_mov_b32 v184, 0x939B462D\n"
  "v_mov_b32 v185, 0x41357E8C\n"
  "v_mov_b32 v186, 0xB572F3D0\n"
  "v_mov_b32 v187, 0xABAE4F43\n"
  "v_mov_b32 v188, 0x5D3D9E56\n"
  "v_mov_b32 v189, 0xD9178793\n"
  "v_mov_b32 v190, 0x688C7015\n"
  "v_mov_b32 v191, 0x2095EEF6\n"
  "v_mov_b32 v192, 0xF0BBAC67\n"
  "v_mov_b32 v193, 0xE71E43A6\n"
  "v_mov_b32 v194, 0x4D0B0D1A\n"
  "v_mov_b32 v195, 0x001A9A8B\n"
  "v_mov_b32 v196, 0x49732D6C\n"
  "v_mov_b32 v197, 0xA79AC9AA\n"
  "v_mov_b32 v198, 0x77097749\n"
  "v_mov_b32 v199, 0x15B52908\n"
  "v_mov_b32 v200, 0x55CEE5DB\n"
  "v_mov_b32 v201, 0xC04A96C4\n"
  "v_mov_b32 v202, 0xAC3C5640\n"
  "v_mov_b32 v203, 0x32FA2DE8\n"
  "v_mov_b32 v204, 0x0640BE0F\n"
  "v_mov_b32 v205, 0x12A4DEF0\n"
  "v_mov_b32 v206, 0xB24445A7\n"
  "v_mov_b32 v207, 0x7E8F8095\n"
  "v_mov_b32 v208, 0x3E75C3B4\n"
  "v_mov_b32 v209, 0x6CD66193\n"
  "v_mov_b32 v210, 0x8498E113\n"
  "v_mov_b32 v211, 0xD92C9227\n"
  "v_mov_b32 v212, 0x74DAAEBF\n"
  "v_mov_b32 v213, 0xCD29A36F\n"
  "v_mov_b32 v214, 0x986F9025\n"
  "v_mov_b32 v215, 0xE4347D51\n"
  "v_mov_b32 v216, 0x81392443\n"
  "v_mov_b32 v217, 0x8C41561B\n"
  "v_mov_b32 v218, 0xE5AF6E39\n"
  "v_mov_b32 v219, 0x79844388\n"
  "v_mov_b32 v220, 0xA33DC7AF\n"
  "v_mov_b32 v221, 0x8573E793\n"
  "v_mov_b32 v222, 0xA07295E9\n"
  "v_mov_b32 v223, 0x464C04AF\n"
  "v_mov_b32 v224, 0x49257AF1\n"
  "v_mov_b32 v225, 0x458F1F19\n"
  "v_mov_b32 v226, 0x8A476A87\n"
  "v_mov_b32 v227, 0x236C7B87\n"
  "v_mov_b32 v228, 0x3B33F3D8\n"
  "v_mov_b32 v229, 0xB1A6B1F1\n"
  "v_mov_b32 v230, 0xB4D7E28E\n"
  "v_mov_b32 v231, 0x10714D51\n"
  "v_mov_b32 v232, 0x68586EBA\n"
  "v_mov_b32 v233, 0x8AE8905B\n"
  "v_mov_b32 v234, 0x6A702E2F\n"
  "v_mov_b32 v235, 0x6B8E869F\n"
  "v_mov_b32 v236, 0xB20DCB6E\n"
  "v_mov_b32 v237, 0x6160A6B4\n"
  "v_mov_b32 v238, 0x5A0CDD7C\n"
  "v_mov_b32 v239, 0xC0E3BEFD\n"
  "v_mov_b32 v240, 0x3875394C\n"
  "v_mov_b32 v241, 0x382C043F\n"
  "v_mov_b32 v242, 0x6F92F25E\n"
  "v_mov_b32 v243, 0x076E2BBA\n"
  "v_mov_b32 v244, 0x06F028FF\n"
  "v_mov_b32 v245, 0xA48B3DBE\n"
  "v_mov_b32 v246, 0x7631DE9D\n"
  "v_mov_b32 v247, 0x0CDF742B\n"
  "v_mov_b32 v248, 0x610CF373\n"
  "v_mov_b32 v249, 0x362F5E5C\n"
  "v_mov_b32 v250, 0x53AC2AB9\n"
  "v_mov_b32 v251, 0x610E6A64\n"
  "v_mov_b32 v252, 0xD4F8FD72\n"
  "v_mov_b32 v253, 0x14F7CE8D\n"
  "v_mov_b32 v254, 0x8A175DFE\n"
  "v_mov_b32 v255, 0x59970043\n"
  "s_mov_b32   s0, 0xA66FD7F7\n"
  "s_mov_b32   s1, 0xA6D964A3\n"
  "s_mov_b32   s2, 0xC1156D6D\n"
  "s_mov_b32   s3, 0xF319C125\n"
  "s_mov_b32   s4, 0x2702878B\n"
  "s_mov_b32   s5, 0x20500494\n"
  "s_mov_b32   s6, 0xAB61A7B1\n"
  "s_mov_b32   s7, 0x37CC863B\n"
  "s_mov_b32   s8, 0xB31022F0\n"
  "s_mov_b32   s9, 0xC4536F1D\n"
  "s_mov_b32  s10, 0xD1BDB8C0\n"
  "s_mov_b32  s11, 0xF6F7F0CC\n"
  "s_mov_b32  s12, 0xF54AD0A2\n"
  "s_mov_b32  s13, 0xB70B3420\n"
  "s_mov_b32  s14, 0xA092F52A\n"
  "s_mov_b32  s15, 0xC5C14EB4\n"
  "s_mov_b32  s16, 0xC85ACA46\n"
  "s_mov_b32  s17, 0x5EDDBBBF\n"
  "s_mov_b32  s18, 0x575AED2C\n"
  "s_mov_b32  s19, 0xD97DC9CD\n"
  "s_mov_b32  s20, 0xD284476C\n"
  "s_mov_b32  s21, 0x1B049863\n"
  "s_mov_b32  s22, 0xF5F62C97\n"
  "s_mov_b32  s23, 0xD4262982\n"
  "s_mov_b32  s24, 0xB5122DF8\n"
  "s_mov_b32  s25, 0x6F7C15EA\n"
  "s_mov_b32  s26, 0x7BC67E1F\n"
  "s_mov_b32  s27, 0x44B591F7\n"
  "s_mov_b32  s28, 0xDA09DFA0\n"
  "s_mov_b32  s29, 0x162F8A24\n"
  "s_mov_b32  s30, 0xE1B294DE\n"
  "s_mov_b32  s31, 0x6105716B\n"
  "s_mov_b32  s32, 0x0758E201\n"
  "s_mov_b32  s33, 0xD9D80B8D\n"
  "s_mov_b32  s34, 0x2E8D0E87\n"
  "s_mov_b32  s35, 0x364D7C87\n"
  "s_mov_b32  s36, 0xCC3EBDDE\n"
  "s_mov_b32  s37, 0x57207246\n"
  "s_mov_b32  s38, 0xF2B43ABF\n"
  "s_mov_b32  s39, 0x15EABB27\n"
  "s_mov_b32  s40, 0xB856D035\n"
  "s_mov_b32  s41, 0xC2171429\n"
  "s_mov_b32  s42, 0xB0CBC61F\n"
  "s_mov_b32  s43, 0x7DA67785\n"
  "s_mov_b32  s44, 0xCAFDA613\n"
  "s_mov_b32  s45, 0x17D2582E\n"
  "s_mov_b32  s46, 0x38BA8ABC\n"
  "s_mov_b32  s47, 0xB118F68D\n"
  "s_mov_b32  s48, 0x94E0D3BA\n"
  "s_mov_b32  s49, 0x87EA7FF5\n"
  "s_mov_b32  s50, 0x54AEBD1B\n"
  "s_mov_b32  s51, 0xB3EE4D3B\n"
  "s_mov_b32  s52, 0x455AC762\n"
  "s_mov_b32  s53, 0x405BFDC9\n"
  "s_mov_b32  s54, 0x314D3441\n"
  "s_mov_b32  s55, 0x2F65FAFA\n"
  "s_mov_b32  s56, 0x7BF47042\n"
  "s_mov_b32  s57, 0x31B1B099\n"
  "s_mov_b32  s58, 0x3A3C563E\n"
  "s_mov_b32  s59, 0x2DEFE193\n"
  "s_mov_b32  s60, 0x88BD13D1\n"
  "s_mov_b32  s61, 0x4639447B\n"
  "s_mov_b32  s62, 0xF96B648A\n"
  "s_mov_b32  s63, 0x8DA8EEE4\n"
  "s_mov_b32  s64, 0x7DAA39F0\n"
  "s_mov_b32  s65, 0xDF6A8F93\n"
  "s_mov_b32  s66, 0x92F5DF7B\n"
  "s_mov_b32  s67, 0x782A65E0\n"
  "s_mov_b32  s68, 0x70C2903F\n"
  "s_mov_b32  s69, 0x0D270659\n"
  "s_mov_b32  s70, 0x7A4C75D4\n"
  "s_mov_b32  s71, 0xD2762BDC\n"
  "s_mov_b32  s72, 0x6694C343\n"
  "s_mov_b32  s73, 0x0DB95301\n"
  "s_mov_b32  s74, 0x4DC82A1E\n"
  "s_mov_b32  s75, 0xFE716B14\n"
  "s_mov_b32  s76, 0xC3B290D0\n"
  "s_mov_b32  s77, 0x85C7504B\n"
  "s_mov_b32  s78, 0x715629EE\n"
  "s_mov_b32  s79, 0xFD72B050\n"
  "s_mov_b32  s80, 0x9EFBA58B\n"
  "s_mov_b32  s81, 0xBD767E35\n"
  "s_mov_b32  s82, 0x3605BF54\n"
  "s_mov_b32  s83, 0xA911D192\n"
  "s_mov_b32  s84, 0x2834E4C0\n"
  "s_mov_b32  s85, 0x1337739E\n"
  "s_mov_b32  s86, 0x00AF5B3A\n"
  "s_mov_b32  s87, 0x980402A2\n"
  "s_mov_b32  s88, 0x4A8FF810\n"
  "s_mov_b32  s89, 0x3B4206C5\n"
  "s_mov_b32  s90, 0xB4FB0EB9\n"
  "s_mov_b32  s91, 0x743B65A2\n"
  "s_mov_b32  s92, 0xAFF8754D\n"
  "s_mov_b32  s93, 0xEC856F37\n"
  "s_mov_b32  s94, 0xEF04E57D\n"
  "s_mov_b32  s95, 0x6CD5E859\n"
  "s_mov_b32  s96, 0x8B6870B5\n"
  "s_mov_b32  s97, 0xA5CB63A2\n"
  "s_mov_b32  s98, 0xE88DA719\n"
  "s_mov_b32  s99, 0xD39E198B\n"
  "s_mov_b32 s100, 0x1247EA4E\n"
  "s_mov_b32 s101, 0x49E2623D\n"
: : : "v0", "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14", "v15", "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28", "v29", "v30", "v31", "v32", "v33", "v34", "v35", "v36", "v37", "v38", "v39", "v40", "v41", "v42", "v43", "v44", "v45", "v46", "v47", "v48", "v49", "v50", "v51", "v52", "v53", "v54", "v55", "v56", "v57", "v58", "v59", "v60", "v61", "v62", "v63", "v64", "v65", "v66", "v67", "v68", "v69", "v70", "v71", "v72", "v73", "v74", "v75", "v76", "v77", "v78", "v79", "v80", "v81", "v82", "v83", "v84", "v85", "v86", "v87", "v88", "v89", "v90", "v91", "v92", "v93", "v94", "v95", "v96", "v97", "v98", "v99", "v100", "v101", "v102", "v103", "v104", "v105", "v106", "v107", "v108", "v109", "v110", "v111", "v112", "v113", "v114", "v115", "v116", "v117", "v118", "v119", "v120", "v121", "v122", "v123", "v124", "v125", "v126", "v127", "v128", "v129", "v130", "v131", "v132", "v133", "v134", "v135", "v136", "v137", "v138", "v139", "v140", "v141", "v142", "v143", "v144", "v145", "v146", "v147", "v148", "v149", "v150", "v151", "v152", "v153", "v154", "v155", "v156", "v157", "v158", "v159", "v160", "v161", "v162", "v163", "v164", "v165", "v166", "v167", "v168", "v169", "v170", "v171", "v172", "v173", "v174", "v175", "v176", "v177", "v178", "v179", "v180", "v181", "v182", "v183", "v184", "v185", "v186", "v187", "v188", "v189", "v190", "v191", "v192", "v193", "v194", "v195", "v196", "v197", "v198", "v199", "v200", "v201", "v202", "v203", "v204", "v205", "v206", "v207", "v208", "v209", "v210", "v211", "v212", "v213", "v214", "v215", "v216", "v217", "v218", "v219", "v220", "v221", "v222", "v223", "v224", "v225", "v226", "v227", "v228", "v229", "v230", "v231", "v232", "v233", "v234", "v235", "v236", "v237", "v238", "v239", "v240", "v241", "v242", "v243", "v244", "v245", "v246", "v247", "v248", "v249", "v250", "v251", "v252", "v253", "v254", "v255", "s0", "s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11", "s12", "s13", "s14", "s15", "s16", "s17", "s18", "s19", "s20", "s21", "s22", "s23", "s24", "s25", "s26", "s27", "s28", "s29", "s30", "s31", "s32", "s33", "s34", "s35", "s36", "s37", "s38", "s39", "s40", "s41", "s42", "s43", "s44", "s45", "s46", "s47", "s48", "s49", "s50", "s51", "s52", "s53", "s54", "s55", "s56", "s57", "s58", "s59", "s60", "s61", "s62", "s63", "s64", "s65", "s66", "s67", "s68", "s69", "s70", "s71", "s72", "s73", "s74", "s75", "s76", "s77", "s78", "s79", "s80", "s81", "s82", "s83", "s84", "s85", "s86", "s87", "s88", "s89", "s90", "s91", "s92", "s93", "s94", "s95", "s96", "s97", "s98", "s99", "s100", "s101");
  // GPU BREAKPOINT
}

int main() {
  // Launch the kernel.
  printf("Launching kernel...\n"); // CPU BREAKPOINT - BEFORE LAUNCH
  set_known_reg_values_kernel<<<
      dim3(1), // 3D grid specifying number of blocks to launch
      dim3(64), // 3D grid specifying number of threads to launch
      0, // number of bytes of additional shared memory to allocate
      hipStreamDefault // stream where the kernel should execute: default stream
      >>>();

  // Wait on all active streams on the current device.
  printf("Waiting for kernel to finish...\n");
  HIP_CHECK(hipDeviceSynchronize());

  printf("Done!\n");
}
